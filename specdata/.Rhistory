calc_streak(kobe$basket)
kobe_streak <- calc_streak(kobe$basket)
table(kobe_streak)
barplot(table(kobe_streak))
outcomes <- c("heads", "tails")
?c
sample(outcomes, size=10, replace=TRUE)
sim_fair_coin <- sample(outcomes, size=100, replace=TRUE)
table(sim_fair_coin)
table(sim_fair_coin)/100
sim_unfair_coin <- sample(ouctomes, size=100, replace=TRUE, prob=c(.2,.8))
sim_unfair_coin <- sample(outcomes, size=100, replace=TRUE, prob=c(.2,.8))
table(sim_unfair_coin)
?sample
outcomes <- c("H", "M'")
sim_ind_shooter <- sample(outcomes, size=133, replace=TRUE)
sim_ind_shooter <- sample(outcomes, size=133, replace=TRUE, prob = c(.45,.55))
kobe$basket
sim_ind_shooter
outcomes <- c("H", "M")
kobe$basket
sim_ind_shooter
> sim_ind_shooter <- sample(outcomes, size=133, replace=TRUE)
sim_ind_shooter <- sample(outcomes, size=133, replace=TRUE)
sim_ind_shooter
kobe$basket
table(kobe$baset)
table(kobe$basket)
kobe_streak
calc_streak(sim_ind_shooter)
table(kobe_streak)
table(calc_streak(sim_ind_shooter))
sim_ind_shooter <- sample(outcomes, size=133, replace=TRUE, prob=c(.45,.55))
table(calc_streak(sim_ind_shooter))
sim_ind_shooter <- sample(outcomes, size=133, replace=TRUE, prob=c(.45,.55))
table(calc_streak(sim_ind_shooter))
sim_ind_shooter <- sample(outcomes, size=133, replace=TRUE, prob=c(.45,.55))
table(calc_streak(sim_ind_shooter))
table(kobe$basket)/133
download.file("http://www.openintro.org/stat/data/bdims.RData", destfile = "bdims.RData")
load("bdims.RData")
head(bdims)
View(bdims)
mdims <- subset(bdims,sex == "1")
fdims <- subest(bdims,sex == "0")
fdims <- subset(bdims,sex == "0")
hist(mdims)
?hist
hist(mdims)
hist(mdims$height)
hist(mdims$hgt)
hist(fdims$hgt)
f_hgt_mean <- mean(fdims$hgt)
f_hgt_sd <- sd(fdims$hgt)
hist(fdims$hgt, probablity = TRUE)
hist(fdims$hgt, probabIlity = TRUE)
hist(fdims$hgt, probability = TRUE)
hist(fdims$hgt, probability = TRUE)
x<- 140:190
y<-dnorm(x=x,y=y, col=blue)
y <- dnorm(x = x, y = y, col = "blue")
y <- dnorm(x = x, mean = f_hgt_mean, sd = f_hgt_sd)
lines(x=x, y=y, col="blue")
which.min(fdims$hgt)
min(fdims$hgt)
max(fdims$hgt)
hist(fdims$hgt, probability = TRUE, ylim=c(0,0.6))
hist(fdims$hgt, probability = TRUE, ylim=c(0,0.06))
lines(x=x, y=y, col="blue")
?dnorm
qqnorm(fdims$hgt)
qqline(fdims$hgt)
download.file("http://www.openintro.org/stat/data/bdims.RData", destfile = "bdims.RData")
load("bdims.RData")
mdims <- subset(dims,sex=="1")
mdims <- subset(bdims,sex=="1")
fdims <- subset(bdims,sex=="0")
hist(mdims)
hist(mdims$hgt)
hist(mdims$hgt, breaks=18)
hist(mdims$hgt, breaks=1-)
hist(mdims$hgt, breaks=10)
hist(fdims$hgt, breaks=10)
hist(fdims$hgt, breaks=12)
hist(fdims$hgt, breaks=15)
hist(fdims$hgt, breaks=20)
hist(fdims$hgt, breaks=10)
hist(mdims$hgt, breaks=10)
f_hgt_mean = mean(fdims$hgt)
f_hgt_sd = sd(fdims$hgt)
hist(fdims$hgt, probability=TRUE)
x<-140:190
y<-dnorm(x=x, mean=f_hgt_mean, sd=f_hgt_sd)
lines(x=x, y=y, col="blue")
lines(x=x, y=y, col="blue", ylim=c(0,0.06))
hist(fdims$hgt, probability=TRUE, ylim=c(0,0.06))
lines(x=x, y=y, col="blue")
min(mdims$hgt)
max(mdims$hgt)
m_hgt_mean = mean(mdims$hgt)
m_hgt_sd = sd(mdims$hgt)
x2 <- 150:200
y2 <- dnorm(x=x2, mean=m_hgt_mean, sd=m_hgt_sd)
hist(mdims$hgt, probability=TRUE, ylim=c(0,0.06))
lines(x=x2, y=y2, col="blue")
qqnorm(fdims$hgt)
qqline(fdims$hgt)
qqnorm
?qqnorm
qqnorm
sim_norm <- rnorm(n=length(fdims$hgt), mean=f_hgt_mean, sd=f_hgt_mean)
qqplot(sim_norm)
qqnorm(sim_norm)
qqline(sim_norm)
sim_norm
sim_norm <- rnorm(n=length(fdims$hgt), mean=f_hgt_mean, sd=f_hgt_sd)
sim_norm
qqplot(sim_norm)
qqnorm(sim_norm)
qqline(sim_norm)
qqnormsim(fdims$hgt)
?qqnormsim
pnorm(q=182, mean = f_ght_mean, sd = f_hgt_sd)
pnorm(q=182, mean = f_hgt_mean, sd = f_hgt_sd)
1 - pnorm(q=182, mean = f_ht_mean, sd = f_hgt_sd)
1 - pnorm(q=182, mean = f_hgt_mean, sd = f_hgt_sd)
?z score
sum(fdims$hgt) > 182 / length(fdims$hgt)
sum(fdims$hgt > 182) / length(fdims$hgt)
sum(fdims$hgt > 182)
pnorm(q=164.9, mean=f_hgt_mean, sd=f_hgt_sd)
sum(fdims$hgt) > 164.9 / length(fdims$hgt)
sum(fdims$hgt > 164.9) / length(fdims$hgt)
sum(fdims$hgt) < 164.9 / length(fdims$hgt)
sum(fdims$hgt < 164.9) / length(fdims$hgt)
1 - pnorm(q=100, mean=mean(fdims$hgt), sd=sd(fdims$hgt))
sum(fdims$hgt > 164.9) / length(fdims$wft)
1 - pnorm(q=100, mean=mean(fdims$wgt), sd=sd(fdims$wgt))
sum(fdims$wgt > 100) / length(fdims$wgt)
pnorm(q=65, mean=mean(fdims$wgt), sd=sd(fdims$weight))
> pnorm(q=65, mean=mean(fdims$wgt), sd=sd(fdims$wgt))
pnorm(q=65, mean=mean(fdims$wgt), sd=sd(fdims$wgt))
sum((fdims$wgt < 65) / length(fdims$wgt))
hist(fdims$bii.di)
hist(fdims$bii.di)
qqnorm(fdims$bii.di)
fouls <- c(23.5, 34, 31, 55.5, 38, 46, 40.3, 40.3, 41.5, 57)
mean(fouls)
sd(fouls)
summary(fouls)
44.88-35
35 - 9.88*2
44.88 + 9.88*1.5
35-1.5*9.88
table(cdc$smoke100)/20000
plot(x=bdims$hgt, y=bdims$wgt)
plot(x=bdims$hgt, y=bdims$wgt, main="Height v. Weight", xlab="Height", ylab="Weight")
plot(x=bdims$hgt, y=bdims$wgt, main="Height v. Weight", xlab="Height", ylab="Weight", xlim = (130,210))
?xlim
plot(x=bdims$hgt, y=bdims$wgt, main="Height v. Weight", xlab="Height", ylab="Weight", xlim = c(130,210))
plot(x=bdims$hgt, y=bdims$wgt, main="Height v. Weight", xlab="Height", ylab="Weight", xlim = c(100,200))
cdc[1:10,]
cdc[1:10,1]
cdc[1:10, [1:2]]
?abline
?lm
library()
install.packages("geometry")
(2014-2011)/2014
(2015-2012)/(2015-1984)*100
rm(list=ls())
c=(4,5,8,11)
sample <- c(4,5,8,11)
mean(sample)
sum(sample)
rnorm(10)
rnorm(n=5, mean=70, sd=4)
rnorm(n=6, mean=5.75, sd=.75)
rnorm(n=6, mean=5.75, sd=.75)
rnorm(n=20, mean=5.75, sd=.75)
rnorm(100)
plot(rnorm(100))
help(rnorm)
example(rnorm)
sample(n=100,replace=TRUE)
sample(1,1000,n=100,replace=T)
sample(1,1000,100,replace=T)
sample(1000,100,replace=T)
d=data.frame(a=c(from=0, to=32, by=2x))
d=data.frame(a=c(1,2,4,8,16,32) g=c(2,4,8,16,32,64), x=c(3,6,12,24,48,96))
d=data.frame(a=c(1,2,4,8,16,32), g=c(2,4,8,16,32,64), x=c(3,6,12,24,48,96))
d
write.table(d, file="tst0.txt", row.names=FALSE)
d2 = read.table(file="tst0.txt", header=TRUE)
d2
d2$g*5
>hist(fdims$hgt, probability=TRUE”)
hist(fdims$hgt, probability=TRUE”)
>hist(fdims$hgt, probability=TRUE)
hist(fdims$hgt, probability=TRUE)
download.file("http://www.openintro.org/stat/data/bdims.RData", destfile = "bdims.RData")
load("bdims.RData")
fdims <- subset(bdims, gender=="0")
bdims
View(bdims)
fdims <- subset(bdims, sex == "0")
hist(fdims, probability = TRUE)
hist(fdims$hgt, probability=TRUE)
hist(fdims$hgt, probability=TRUE)
?qqnorm
qqnorm(fdims$hgt)
qqline(fdims$hgt)
?qqline
qqplot(fdims$hgt)
fdimsmean = mean(fdims$hgt)
fdimssd=sd(fdims$hgt)
sim_norm <- rnorm(n=length(fdims$hgt), mean=(fdimsmean), sd=(fdimssd))
qqnorm(sim_norm)
qqline(sim_norm)
qqnormsim(fdims$hgt)
qqnormsim(fdims$hgt)
qqnormsim(fdims$hgt)
pnorm(q =182, mean=fdimsmean, sd=fdimssd)
pnorm(q =180, mean=fdimsmean, sd=fdimssd)
sum(fdims$hgt < 182) / length(fdims$hgt)
rnorm
available.packages()
library(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
search()
install.packages(kernlab)
install.packages("kernlab")
install.packages("slidify")
library(KernSmooth)
## This is a markdown file
## This is a markdown file
x<- 4L
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x, y)
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- 1:4
y <- 2:3
x+y
x <- c(3, 5, 1, 10, 12, 6)
load(hw1_data.csv)
hw1_data <- read.csv("~/Downloads/hw1_data.csv")
View(hw1_data)
dim(hw1_data)
tail(hw1_data)
hw1_data[47,1]
table (hw1_data$ozone)
table(hw1_data$ozone)
hist(hw1_data$ozone)
is.na(hw1_data$Ozone)
table(is.na(hw1_data$Ozone))
noNA <- subset(hw1_data,Ozone ! "NA")
noNA <- subset(hw1_data,Ozone!"NA")
noNA <- subset(hw1_data,Ozone =!= "NA")
noNA <- subset(hw1_data,hw1_data$Ozone =!= "NA")
noNA <- subset(hw1_data,hw1_data$Ozone ! "NA")
noNA <- subset(hw1_data,hw1_data$Ozone != "NA")
mean(noNA)
mean(noNA$Ozone)
noNA <- subset(hw1_data,hw1_data$Ozone != "NA" | hw1_data$Solar.R != "NA")
noNA <- subset(hw1_data,hw1_data$Ozone != "NA" & hw1_data$Solar.R != "NA")
extract1 <- subset(noNA,noNA$Ozone > 31 & noNA$Temp > 90)
mean(extract1$Solar.R)
mean(hw1_data$temp[Month == 6])
mean(hw1_data$temp[Month == "6"])
mean(hw1_data$temp[hw1_data$Month == 6])
mean(hw1_data$temp[hw1_data$Month == "6"])
mean(hw1_data$temp[hw1_data$Month == "6"])
June <- subset(hw1_data, hw1_data$Month == "6")
mean(June$Temp)
mean(hw1_data$Temp[hw1_data$Month == "6"])
max(hw1_data$Ozone[hw1_data$Month == "5])
hjk
max(hw1_data$Ozone[hw1_data$Month == "5"])
max(hw1_data$Ozone[hw1_data$Month == "5"])
max(noNA$Ozone[hw1_data$Month == "5"])
cube <- function(x.n) {x^3}
cube(3)
cube <- function(x,n) {x^3}
cube(3)
mean(hw1_data$temp)
mean(hw1_data$Temp)
View(fdims)
View(bdims)
View(bdims)
View(noNA)
View(June)
View(June)
View(hw1_data)
mean(Solar.R)
mean(hw1_data$Solar.R)
noNA <- sample(hw1_data[Solar.R > 0])
noNA <- sample(hw1_data["Solar.R" > 0])
mean(noNA$Solar.R)
x <- 1:10
if (x>5) {x <- 0}
f <- function(x) {}
f<-function(x) {g<- function(y){y+z} z<-4 x+g(x)}
f <- function(x) {
g <- function(y){
y+z
}
z<-4
x + g(x)
}
z<- 10
f(3)
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
add2 <- function(x,y){
x+y
}
add2(3,5)
above10 <- function(x){
use <- x > 10
x[use]
}
above10
above10(20)
above10(15)
x <- 1:20
above10(14)
above <- function(x,n){
use <- x > n
x[use]
}
above(x,12)
above <- function(x,n=10){
use <- x > n
x[use]
}
columnmean <- function(y){
nc <- ncol(y)
means<- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
columnmean(airquality)
columnmean <- function(y, removeNA=true){
nc <- ncol(y)
means<- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i], na.rm=removeNA)
}
means
}
columnmean(airquality)
columnmean <- function(y, removeNA=TRUE){
nc <- ncol(y)
means<- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i], na.rm=removeNA)
}
means
}
columnmean <- function(y, removeNA=TRUE){
nc <- ncol(y)
means<- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i], na.rm=removeNA)
}
means
}
columnmean(airquality)
columnmean(airquality, removeNA = FALSE)
args(lm)
args(hist)
args(boxplot)
f <- function(a, b=1, c=2, d=NULL){
a^2
}
f(2)
f <- function(a, b){
print(a)
print(b)
}
f(2)
f(2,3)
f(2,gh)
f(6,)
myplot <- function(x, y, type="l", ...){}
args(paste)
args(cat)
lm <- function(x) {x*x}
search()
f<- function(x,y) {
x^2 + y/z
}
f(2,3)
f(2,3,4)
z<- 5
f(2,3)
z<- 1:10
f(2,3)
make.power <- function(n){
pow <- function(x){
x^n
}
}
make.power(2)
make.power(2,3)
pow(5)
pow(5)
make.power <- function(n){
pow <- function(x){
x^n
}
pow
}
make.power(2)
cube <- make.power(3)
cube(8)
ls(environment(cube))
y <-10
f <- function(x {
y <- 2
y^2 + g(x)
}
g<- function(x) {
x*y
}
y <-10
f <- function(x) {
y <- 2
y^2 + g(x)
}
g<- function(x) {
x*y
}
f(3)
x<- as.Date("1970-01-01")
x
View(noNA)
View(noNA)
View(noNA)
?is.na
?mean
getwd()
list.files()
setwd("~/Desktop/Coursera")
list.files()
read.csv("001.csv")
read.csv("specdata/001.csv")
dim(001)
dim(001.csv)
load("specdata/001.csv")
001 <- read("specdata/001.csv")
list()
list.files()
001<- read.csv("specdata/001.csv")
first <- read.csv("specdata/001.csv")
head(first)
dims(first)
dim(first)
str(first)
?data.frame
?str
list.files("specdata")
files <- list.files(specdata)
files <- list.files("specdata")
head(read.csv(files[4]))
setwd("~/Desktop/Coursera/specdata")
head(read.csv(files[4]))
all <- rbind()
?rbind
tail(all)
first2 <- rbind(first, read.csv("002.csv"))
tail(first2)
for(i in 1:5) {print(i)}
alldata <- data.frame()
pollutantmean <- function(directory, pollutant, id=1:332){
for(i in 1:332){
alldata <- rbind(first, read.csv(files[i]))
}
}
mean(alldata$sulfate)
mean(alldata$sulfate, na.rm=TRUE)
View(first)
View(first)
View(d)
View(alldata)
for(i in 1:332){ alldata <- rbind(first, read.csv(files[i])) }
